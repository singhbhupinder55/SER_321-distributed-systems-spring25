apply plugin: 'application'

repositories {
    mavenCentral()
}

dependencies {
   implementation group: 'org.json', name: 'json', version: '20200518'
}

//define main class
mainClassName = 'Concentration'


task runTask1(type: JavaExec) {
  group 'server'
  description 'Runs Task 1 Server (Single-threaded)'

  classpath = sourceSets.main.runtimeClasspath

  main = 'taskone.Server'
  standardInput = System.in

  def port = project.hasProperty('port') ? project.getProperty('port') : '8000'
  args(port)
}


task runTask2(type: JavaExec) {
  group 'server'
  description 'Runs Task 2 Server (Multi-threaded)'

  classpath = sourceSets.main.runtimeClasspath

  main = 'taskone.ThreadedServer'
  standardInput = System.in

  def port = project.hasProperty('port') ? project.getProperty('port') : '8000'
  args(port)
}

task runTask3(type: JavaExec) {
  group 'server'
  description 'Runs Task 3 Server (ThreadPool with limited clients)'

  classpath = sourceSets.main.runtimeClasspath

  main = 'taskone.ThreadPoolServer'
  standardInput = System.in

  def port = project.hasProperty('port') ? project.getProperty('port') : '8000'
  def threads = project.hasProperty('threads') ? project.getProperty('threads') : '4'
  args(port, threads)
}


task runClient(type: JavaExec) {
  group 'client'
  description 'Runs Client with default values (host=localhost, port=8000)'

  classpath = sourceSets.main.runtimeClasspath
  standardInput = System.in

  main = 'taskone.Client'
  standardInput = System.in

  def host = project.hasProperty("host") ? project.getProperty("host") : "localhost"
  def port = project.hasProperty('port') ? project.getProperty('port') : "8000"

  args(host, port)
}

